<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="966" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="949.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="949.00"> </text><g id="frames"><g><title>&lt;module&gt; (pyinstrument\__init__.py) (1 samples, 1.64%)</title><rect x="10" y="148" width="19" height="15" fill="rgb(217,89,53)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="10" y="164" width="19" height="15" fill="rgb(215,168,31)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="10" y="180" width="19" height="15" fill="rgb(216,220,3)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="10" y="196" width="19" height="15" fill="rgb(219,151,23)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.64%)</title><rect x="10" y="212" width="19" height="15" fill="rgb(214,15,52)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="10" y="228" width="19" height="15" fill="rgb(211,153,22)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (pyinstrument\profiler.py) (1 samples, 1.64%)</title><rect x="10" y="244" width="19" height="15" fill="rgb(223,109,26)"/><text x="13.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="10" y="260" width="19" height="15" fill="rgb(231,89,18)"/><text x="13.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="10" y="276" width="19" height="15" fill="rgb(233,53,16)"/><text x="13.00" y="286.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="10" y="292" width="19" height="15" fill="rgb(212,183,7)"/><text x="13.00" y="302.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.64%)</title><rect x="10" y="308" width="19" height="15" fill="rgb(243,43,39)"/><text x="13.00" y="318.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.64%)</title><rect x="10" y="324" width="19" height="15" fill="rgb(222,161,34)"/><text x="13.00" y="334.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.64%)</title><rect x="10" y="340" width="19" height="15" fill="rgb(214,218,17)"/><text x="13.00" y="350.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.64%)</title><rect x="10" y="356" width="19" height="15" fill="rgb(251,65,13)"/><text x="13.00" y="366.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.64%)</title><rect x="10" y="372" width="19" height="15" fill="rgb(210,170,14)"/><text x="13.00" y="382.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.64%)</title><rect x="10" y="388" width="19" height="15" fill="rgb(229,145,25)"/><text x="13.00" y="398.50"></text></g><g><title>CreateFileW (KERNELBASE.dll) (1 samples, 1.64%)</title><rect x="10" y="404" width="19" height="15" fill="rgb(252,141,36)"/><text x="13.00" y="414.50"></text></g><g><title>CreateFileW (KERNELBASE.dll) (1 samples, 1.64%)</title><rect x="10" y="420" width="19" height="15" fill="rgb(227,67,45)"/><text x="13.00" y="430.50"></text></g><g><title>NtCreateFile (ntdll.dll) (1 samples, 1.64%)</title><rect x="10" y="436" width="19" height="15" fill="rgb(232,198,17)"/><text x="13.00" y="446.50"></text></g><g><title>&lt;module&gt; (pyquickhelper\loghelper\__init__.py) (1 samples, 1.64%)</title><rect x="29" y="148" width="19" height="15" fill="rgb(234,94,45)"/><text x="32.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="164" width="19" height="15" fill="rgb(213,104,35)"/><text x="32.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="180" width="19" height="15" fill="rgb(235,185,5)"/><text x="32.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="196" width="19" height="15" fill="rgb(223,205,39)"/><text x="32.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.64%)</title><rect x="29" y="212" width="19" height="15" fill="rgb(228,26,24)"/><text x="32.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="228" width="19" height="15" fill="rgb(244,23,1)"/><text x="32.00" y="238.50"></text></g><g><title>&lt;module&gt; (pyquickhelper\loghelper\flog.py) (1 samples, 1.64%)</title><rect x="29" y="244" width="19" height="15" fill="rgb(251,103,32)"/><text x="32.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="260" width="19" height="15" fill="rgb(227,9,21)"/><text x="32.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="276" width="19" height="15" fill="rgb(244,51,44)"/><text x="32.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="292" width="19" height="15" fill="rgb(219,0,1)"/><text x="32.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.64%)</title><rect x="29" y="308" width="19" height="15" fill="rgb(216,132,39)"/><text x="32.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="324" width="19" height="15" fill="rgb(238,18,37)"/><text x="32.00" y="334.50"></text></g><g><title>&lt;module&gt; (urllib\request.py) (1 samples, 1.64%)</title><rect x="29" y="340" width="19" height="15" fill="rgb(208,3,50)"/><text x="32.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="356" width="19" height="15" fill="rgb(214,38,38)"/><text x="32.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="372" width="19" height="15" fill="rgb(224,114,13)"/><text x="32.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="388" width="19" height="15" fill="rgb(228,98,12)"/><text x="32.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.64%)</title><rect x="29" y="404" width="19" height="15" fill="rgb(245,56,8)"/><text x="32.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="420" width="19" height="15" fill="rgb(213,185,41)"/><text x="32.00" y="430.50"></text></g><g><title>&lt;module&gt; (http\client.py) (1 samples, 1.64%)</title><rect x="29" y="436" width="19" height="15" fill="rgb(221,60,12)"/><text x="32.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="452" width="19" height="15" fill="rgb(248,155,15)"/><text x="32.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="468" width="19" height="15" fill="rgb(235,151,2)"/><text x="32.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="484" width="19" height="15" fill="rgb(235,91,15)"/><text x="32.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.64%)</title><rect x="29" y="500" width="19" height="15" fill="rgb(207,102,11)"/><text x="32.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="516" width="19" height="15" fill="rgb(245,190,28)"/><text x="32.00" y="526.50"></text></g><g><title>&lt;module&gt; (email\parser.py) (1 samples, 1.64%)</title><rect x="29" y="532" width="19" height="15" fill="rgb(250,10,13)"/><text x="32.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="548" width="19" height="15" fill="rgb(237,128,16)"/><text x="32.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="564" width="19" height="15" fill="rgb(215,202,34)"/><text x="32.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="580" width="19" height="15" fill="rgb(252,83,26)"/><text x="32.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.64%)</title><rect x="29" y="596" width="19" height="15" fill="rgb(244,11,11)"/><text x="32.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="612" width="19" height="15" fill="rgb(249,164,21)"/><text x="32.00" y="622.50"></text></g><g><title>&lt;module&gt; (email\feedparser.py) (1 samples, 1.64%)</title><rect x="29" y="628" width="19" height="15" fill="rgb(245,26,41)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="644" width="19" height="15" fill="rgb(215,140,26)"/><text x="32.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="660" width="19" height="15" fill="rgb(249,71,23)"/><text x="32.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="676" width="19" height="15" fill="rgb(223,33,50)"/><text x="32.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.64%)</title><rect x="29" y="692" width="19" height="15" fill="rgb(210,94,18)"/><text x="32.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="708" width="19" height="15" fill="rgb(222,8,20)"/><text x="32.00" y="718.50"></text></g><g><title>&lt;module&gt; (email\_policybase.py) (1 samples, 1.64%)</title><rect x="29" y="724" width="19" height="15" fill="rgb(205,50,15)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="740" width="19" height="15" fill="rgb(229,5,3)"/><text x="32.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="756" width="19" height="15" fill="rgb(216,198,11)"/><text x="32.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="772" width="19" height="15" fill="rgb(243,115,52)"/><text x="32.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.64%)</title><rect x="29" y="788" width="19" height="15" fill="rgb(254,16,30)"/><text x="32.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="804" width="19" height="15" fill="rgb(213,5,15)"/><text x="32.00" y="814.50"></text></g><g><title>&lt;module&gt; (email\utils.py) (1 samples, 1.64%)</title><rect x="29" y="820" width="19" height="15" fill="rgb(213,106,31)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="836" width="19" height="15" fill="rgb(245,207,47)"/><text x="32.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="852" width="19" height="15" fill="rgb(248,151,12)"/><text x="32.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.64%)</title><rect x="29" y="868" width="19" height="15" fill="rgb(241,147,30)"/><text x="32.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.64%)</title><rect x="29" y="884" width="19" height="15" fill="rgb(214,114,7)"/><text x="32.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.64%)</title><rect x="29" y="900" width="19" height="15" fill="rgb(208,104,8)"/><text x="32.00" y="910.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.64%)</title><rect x="29" y="916" width="19" height="15" fill="rgb(219,161,4)"/><text x="32.00" y="926.50"></text></g><g><title>CloseHandle (KERNELBASE.dll) (1 samples, 1.64%)</title><rect x="48" y="564" width="20" height="15" fill="rgb(243,25,30)"/><text x="51.00" y="574.50"></text></g><g><title>NtClose (ntdll.dll) (1 samples, 1.64%)</title><rect x="48" y="580" width="20" height="15" fill="rgb(252,178,32)"/><text x="51.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 6.56%)</title><rect x="10" y="68" width="77" height="15" fill="rgb(236,31,10)"/><text x="13.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 6.56%)</title><rect x="10" y="84" width="77" height="15" fill="rgb(208,190,13)"/><text x="13.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 6.56%)</title><rect x="10" y="100" width="77" height="15" fill="rgb(207,67,41)"/><text x="13.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 6.56%)</title><rect x="10" y="116" width="77" height="15" fill="rgb(249,126,8)"/><text x="13.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 6.56%)</title><rect x="10" y="132" width="77" height="15" fill="rgb(214,28,17)"/><text x="13.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (td3a_cpp\tutorial\__init__.py) (2 samples, 3.28%)</title><rect x="48" y="148" width="39" height="15" fill="rgb(221,107,54)"/><text x="51.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 3.28%)</title><rect x="48" y="164" width="39" height="15" fill="rgb(252,175,46)"/><text x="51.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 3.28%)</title><rect x="48" y="180" width="39" height="15" fill="rgb(238,115,17)"/><text x="51.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 3.28%)</title><rect x="48" y="196" width="39" height="15" fill="rgb(222,213,28)"/><text x="51.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 3.28%)</title><rect x="48" y="212" width="39" height="15" fill="rgb(230,212,24)"/><text x="51.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 3.28%)</title><rect x="48" y="228" width="39" height="15" fill="rgb(215,194,33)"/><text x="51.00" y="238.50">_ca..</text></g><g><title>0x7ff978be877d (td3a_cpp\tutorial\dot_blas_lapack.cp37-win_amd64.pyd) (2 samples, 3.28%)</title><rect x="48" y="244" width="39" height="15" fill="rgb(224,138,33)"/><text x="51.00" y="254.50">0x7..</text></g><g><title>0x7ff978be9331 (td3a_cpp\tutorial\dot_blas_lapack.cp37-win_amd64.pyd) (2 samples, 3.28%)</title><rect x="48" y="260" width="39" height="15" fill="rgb(221,85,24)"/><text x="51.00" y="270.50">0x7..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 3.28%)</title><rect x="48" y="276" width="39" height="15" fill="rgb(246,104,10)"/><text x="51.00" y="286.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 3.28%)</title><rect x="48" y="292" width="39" height="15" fill="rgb(216,42,40)"/><text x="51.00" y="302.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 3.28%)</title><rect x="48" y="308" width="39" height="15" fill="rgb(222,92,37)"/><text x="51.00" y="318.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 3.28%)</title><rect x="48" y="324" width="39" height="15" fill="rgb(210,200,27)"/><text x="51.00" y="334.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 3.28%)</title><rect x="48" y="340" width="39" height="15" fill="rgb(250,165,14)"/><text x="51.00" y="350.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 3.28%)</title><rect x="48" y="356" width="39" height="15" fill="rgb(209,91,35)"/><text x="51.00" y="366.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 3.28%)</title><rect x="48" y="372" width="39" height="15" fill="rgb(245,204,42)"/><text x="51.00" y="382.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 3.28%)</title><rect x="48" y="388" width="39" height="15" fill="rgb(222,77,39)"/><text x="51.00" y="398.50">_ca..</text></g><g><title>&lt;module&gt; (scipy\linalg\__init__.py) (2 samples, 3.28%)</title><rect x="48" y="404" width="39" height="15" fill="rgb(243,63,43)"/><text x="51.00" y="414.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 3.28%)</title><rect x="48" y="420" width="39" height="15" fill="rgb(237,44,42)"/><text x="51.00" y="430.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 3.28%)</title><rect x="48" y="436" width="39" height="15" fill="rgb(253,111,46)"/><text x="51.00" y="446.50">_fi..</text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (2 samples, 3.28%)</title><rect x="48" y="452" width="39" height="15" fill="rgb(208,17,23)"/><text x="51.00" y="462.50">_fi..</text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 3.28%)</title><rect x="48" y="468" width="39" height="15" fill="rgb(210,81,2)"/><text x="51.00" y="478.50">fin..</text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 3.28%)</title><rect x="48" y="484" width="39" height="15" fill="rgb(248,34,24)"/><text x="51.00" y="494.50">_ge..</text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 3.28%)</title><rect x="48" y="500" width="39" height="15" fill="rgb(213,154,9)"/><text x="51.00" y="510.50">fin..</text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 3.28%)</title><rect x="48" y="516" width="39" height="15" fill="rgb(220,202,45)"/><text x="51.00" y="526.50">_pa..</text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 3.28%)</title><rect x="48" y="532" width="39" height="15" fill="rgb(228,185,9)"/><text x="51.00" y="542.50">_pa..</text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 3.28%)</title><rect x="48" y="548" width="39" height="15" fill="rgb(219,99,31)"/><text x="51.00" y="558.50">_pa..</text></g><g><title>GetFileInformationByHandle (KERNELBASE.dll) (1 samples, 1.64%)</title><rect x="68" y="564" width="19" height="15" fill="rgb(206,16,29)"/><text x="71.00" y="574.50"></text></g><g><title>ZwQueryVolumeInformationFile (ntdll.dll) (1 samples, 1.64%)</title><rect x="68" y="580" width="19" height="15" fill="rgb(234,184,20)"/><text x="71.00" y="590.50"></text></g><g><title>0x7ff9394104f9 (numpy\core\_multiarray_umath.cp37-win_amd64.pyd) (1 samples, 1.64%)</title><rect x="106" y="116" width="20" height="15" fill="rgb(242,135,10)"/><text x="109.00" y="126.50"></text></g><g><title>0x7ff939385f12 (numpy\core\_multiarray_umath.cp37-win_amd64.pyd) (1 samples, 1.64%)</title><rect x="126" y="132" width="19" height="15" fill="rgb(230,60,22)"/><text x="129.00" y="142.50"></text></g><g><title>&lt;genexpr&gt; (td3a_cpp\tutorial\dotpy.py) (4 samples, 6.56%)</title><rect x="87" y="100" width="77" height="15" fill="rgb(239,121,40)"/><text x="90.00" y="110.50">&lt;genexpr..</text></g><g><title>PyInit__multiarray_umath (numpy\core\_multiarray_umath.cp37-win_amd64.pyd) (2 samples, 3.28%)</title><rect x="126" y="116" width="38" height="15" fill="rgb(239,183,53)"/><text x="129.00" y="126.50">PyI..</text></g><g><title>PyInit__multiarray_umath (numpy\core\_multiarray_umath.cp37-win_amd64.pyd) (1 samples, 1.64%)</title><rect x="145" y="132" width="19" height="15" fill="rgb(214,133,46)"/><text x="148.00" y="142.50"></text></g><g><title>0x7ff939352022 (numpy\core\_multiarray_umath.cp37-win_amd64.pyd) (1 samples, 1.64%)</title><rect x="145" y="148" width="19" height="15" fill="rgb(228,102,28)"/><text x="148.00" y="158.50"></text></g><g><title>0x7ff939385eff (numpy\core\_multiarray_umath.cp37-win_amd64.pyd) (1 samples, 1.64%)</title><rect x="184" y="116" width="19" height="15" fill="rgb(228,7,24)"/><text x="187.00" y="126.50"></text></g><g><title>0x7ff939385f12 (numpy\core\_multiarray_umath.cp37-win_amd64.pyd) (1 samples, 1.64%)</title><rect x="203" y="116" width="19" height="15" fill="rgb(243,3,44)"/><text x="206.00" y="126.50"></text></g><g><title>f1_python (plot_profile.py) (8 samples, 13.11%)</title><rect x="87" y="68" width="155" height="15" fill="rgb(234,69,48)"/><text x="90.00" y="78.50">f1_python (plot_pro..</text></g><g><title>pydot (td3a_cpp\tutorial\dotpy.py) (8 samples, 13.11%)</title><rect x="87" y="84" width="155" height="15" fill="rgb(251,214,27)"/><text x="90.00" y="94.50">pydot (td3a_cpp\tut..</text></g><g><title>PyInit__multiarray_umath (numpy\core\_multiarray_umath.cp37-win_amd64.pyd) (4 samples, 6.56%)</title><rect x="164" y="100" width="78" height="15" fill="rgb(236,229,46)"/><text x="167.00" y="110.50">PyInit__m..</text></g><g><title>0x7ff939385fa0 (numpy\core\_multiarray_umath.cp37-win_amd64.pyd) (1 samples, 1.64%)</title><rect x="222" y="116" width="20" height="15" fill="rgb(216,94,23)"/><text x="225.00" y="126.50"></text></g><g><title>_kmp_acquire_nested_drdpa_lock (libiomp5md.dll) (16 samples, 26.23%)</title><rect x="242" y="260" width="309" height="15" fill="rgb(221,5,29)"/><text x="245.00" y="270.50">_kmp_acquire_nested_drdpa_lock (libiomp5m..</text></g><g><title>_kmp_invoke_microtask (libiomp5md.dll) (16 samples, 26.23%)</title><rect x="242" y="276" width="309" height="15" fill="rgb(230,20,47)"/><text x="245.00" y="286.50">_kmp_invoke_microtask (libiomp5md.dll)</text></g><g><title>mkl_blas_ddot (mkl_intel_thread.dll) (16 samples, 26.23%)</title><rect x="242" y="292" width="309" height="15" fill="rgb(217,228,2)"/><text x="245.00" y="302.50">mkl_blas_ddot (mkl_intel_thread.dll)</text></g><g><title>mkl_blas_xddot (mkl_core.dll) (16 samples, 26.23%)</title><rect x="242" y="308" width="309" height="15" fill="rgb(245,211,44)"/><text x="245.00" y="318.50">mkl_blas_xddot (mkl_core.dll)</text></g><g><title>mkl_blas_avx2_xddot (mkl_avx2.dll) (16 samples, 26.23%)</title><rect x="242" y="324" width="309" height="15" fill="rgb(230,113,38)"/><text x="245.00" y="334.50">mkl_blas_avx2_xddot (mkl_avx2.dll)</text></g><g><title>f2_numpy (plot_profile.py) (21 samples, 34.43%)</title><rect x="242" y="68" width="406" height="15" fill="rgb(223,2,43)"/><text x="245.00" y="78.50">f2_numpy (plot_profile.py)</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (21 samples, 34.43%)</title><rect x="242" y="84" width="406" height="15" fill="rgb(209,139,10)"/><text x="245.00" y="94.50">dot (&lt;__array_function__ internals&gt;)</text></g><g><title>0x7ff93938343b (numpy\core\_multiarray_umath.cp37-win_amd64.pyd) (21 samples, 34.43%)</title><rect x="242" y="100" width="406" height="15" fill="rgb(221,134,0)"/><text x="245.00" y="110.50">0x7ff93938343b (numpy\core\_multiarray_umath.cp37-win_a..</text></g><g><title>PyInit__multiarray_umath (numpy\core\_multiarray_umath.cp37-win_amd64.pyd) (21 samples, 34.43%)</title><rect x="242" y="116" width="406" height="15" fill="rgb(224,77,54)"/><text x="245.00" y="126.50">PyInit__multiarray_umath (numpy\core\_multiarray_umath...</text></g><g><title>PyInit__multiarray_umath (numpy\core\_multiarray_umath.cp37-win_amd64.pyd) (21 samples, 34.43%)</title><rect x="242" y="132" width="406" height="15" fill="rgb(226,143,18)"/><text x="245.00" y="142.50">PyInit__multiarray_umath (numpy\core\_multiarray_umath...</text></g><g><title>PyInit__multiarray_umath (numpy\core\_multiarray_umath.cp37-win_amd64.pyd) (21 samples, 34.43%)</title><rect x="242" y="148" width="406" height="15" fill="rgb(206,38,0)"/><text x="245.00" y="158.50">PyInit__multiarray_umath (numpy\core\_multiarray_umath...</text></g><g><title>0x7ff939365732 (numpy\core\_multiarray_umath.cp37-win_amd64.pyd) (21 samples, 34.43%)</title><rect x="242" y="164" width="406" height="15" fill="rgb(233,203,16)"/><text x="245.00" y="174.50">0x7ff939365732 (numpy\core\_multiarray_umath.cp37-win_a..</text></g><g><title>cblas_ddot (mkl_rt.dll) (21 samples, 34.43%)</title><rect x="242" y="180" width="406" height="15" fill="rgb(236,131,32)"/><text x="245.00" y="190.50">cblas_ddot (mkl_rt.dll)</text></g><g><title>ddot (mkl_rt.dll) (21 samples, 34.43%)</title><rect x="242" y="196" width="406" height="15" fill="rgb(205,111,7)"/><text x="245.00" y="206.50">ddot (mkl_rt.dll)</text></g><g><title>mkl_blas_ddot (mkl_intel_thread.dll) (21 samples, 34.43%)</title><rect x="242" y="212" width="406" height="15" fill="rgb(248,216,8)"/><text x="245.00" y="222.50">mkl_blas_ddot (mkl_intel_thread.dll)</text></g><g><title>_kmpc_fork_call (libiomp5md.dll) (21 samples, 34.43%)</title><rect x="242" y="228" width="406" height="15" fill="rgb(232,131,38)"/><text x="245.00" y="238.50">_kmpc_fork_call (libiomp5md.dll)</text></g><g><title>_kmp_fork_call (libiomp5md.dll) (21 samples, 34.43%)</title><rect x="242" y="244" width="406" height="15" fill="rgb(215,194,41)"/><text x="245.00" y="254.50">_kmp_fork_call (libiomp5md.dll)</text></g><g><title>_kmpc_atomic_end (libiomp5md.dll) (5 samples, 8.20%)</title><rect x="551" y="260" width="97" height="15" fill="rgb(228,183,51)"/><text x="554.00" y="270.50">_kmpc_atomi..</text></g><g><title>_kmpc_atomic_end (libiomp5md.dll) (5 samples, 8.20%)</title><rect x="551" y="276" width="97" height="15" fill="rgb(211,32,17)"/><text x="554.00" y="286.50">_kmpc_atomi..</text></g><g><title>_kmp_release_64 (libiomp5md.dll) (4 samples, 6.56%)</title><rect x="570" y="292" width="78" height="15" fill="rgb(210,5,29)"/><text x="573.00" y="302.50">_kmp_rele..</text></g><g><title>SleepEx (KERNELBASE.dll) (4 samples, 6.56%)</title><rect x="570" y="308" width="78" height="15" fill="rgb(228,4,34)"/><text x="573.00" y="318.50">SleepEx (..</text></g><g><title>ZwDelayExecution (ntdll.dll) (4 samples, 6.56%)</title><rect x="570" y="324" width="78" height="15" fill="rgb(249,27,29)"/><text x="573.00" y="334.50">ZwDelayEx..</text></g><g><title>0x7ff970ab10df (scipy\linalg\cython_blas.cp37-win_amd64.pyd) (1 samples, 1.64%)</title><rect x="648" y="84" width="19" height="15" fill="rgb(248,131,7)"/><text x="651.00" y="94.50"></text></g><g><title>ddot (mkl_rt.dll) (1 samples, 1.64%)</title><rect x="648" y="100" width="19" height="15" fill="rgb(215,169,40)"/><text x="651.00" y="110.50"></text></g><g><title>mkl_blas_ddot (mkl_intel_thread.dll) (1 samples, 1.64%)</title><rect x="648" y="116" width="19" height="15" fill="rgb(214,55,18)"/><text x="651.00" y="126.50"></text></g><g><title>_kmpc_fork_call (libiomp5md.dll) (1 samples, 1.64%)</title><rect x="648" y="132" width="19" height="15" fill="rgb(210,187,10)"/><text x="651.00" y="142.50"></text></g><g><title>_kmp_fork_call (libiomp5md.dll) (1 samples, 1.64%)</title><rect x="648" y="148" width="19" height="15" fill="rgb(235,50,24)"/><text x="651.00" y="158.50"></text></g><g><title>_kmp_acquire_nested_drdpa_lock (libiomp5md.dll) (1 samples, 1.64%)</title><rect x="648" y="164" width="19" height="15" fill="rgb(237,84,33)"/><text x="651.00" y="174.50"></text></g><g><title>_kmp_invoke_microtask (libiomp5md.dll) (1 samples, 1.64%)</title><rect x="648" y="180" width="19" height="15" fill="rgb(237,67,26)"/><text x="651.00" y="190.50"></text></g><g><title>mkl_blas_ddot (mkl_intel_thread.dll) (1 samples, 1.64%)</title><rect x="648" y="196" width="19" height="15" fill="rgb(250,29,19)"/><text x="651.00" y="206.50"></text></g><g><title>mkl_blas_xddot (mkl_core.dll) (1 samples, 1.64%)</title><rect x="648" y="212" width="19" height="15" fill="rgb(249,85,44)"/><text x="651.00" y="222.50"></text></g><g><title>mkl_blas_avx2_xddot (mkl_avx2.dll) (1 samples, 1.64%)</title><rect x="648" y="228" width="19" height="15" fill="rgb(249,146,49)"/><text x="651.00" y="238.50"></text></g><g><title>PyInit_cython_blas (scipy\linalg\cython_blas.cp37-win_amd64.pyd) (23 samples, 37.70%)</title><rect x="667" y="116" width="445" height="15" fill="rgb(234,217,10)"/><text x="670.00" y="126.50">PyInit_cython_blas (scipy\linalg\cython_blas.cp37-win_amd64...</text></g><g><title>0x7ff970ab10df (scipy\linalg\cython_blas.cp37-win_amd64.pyd) (23 samples, 37.70%)</title><rect x="667" y="132" width="445" height="15" fill="rgb(212,16,20)"/><text x="670.00" y="142.50">0x7ff970ab10df (scipy\linalg\cython_blas.cp37-win_amd64.pyd)</text></g><g><title>ddot (mkl_rt.dll) (23 samples, 37.70%)</title><rect x="667" y="148" width="445" height="15" fill="rgb(220,190,27)"/><text x="670.00" y="158.50">ddot (mkl_rt.dll)</text></g><g><title>mkl_blas_ddot (mkl_intel_thread.dll) (23 samples, 37.70%)</title><rect x="667" y="164" width="445" height="15" fill="rgb(218,50,46)"/><text x="670.00" y="174.50">mkl_blas_ddot (mkl_intel_thread.dll)</text></g><g><title>_kmpc_fork_call (libiomp5md.dll) (22 samples, 36.07%)</title><rect x="687" y="180" width="425" height="15" fill="rgb(237,135,45)"/><text x="690.00" y="190.50">_kmpc_fork_call (libiomp5md.dll)</text></g><g><title>_kmp_fork_call (libiomp5md.dll) (22 samples, 36.07%)</title><rect x="687" y="196" width="425" height="15" fill="rgb(240,173,52)"/><text x="690.00" y="206.50">_kmp_fork_call (libiomp5md.dll)</text></g><g><title>_kmp_acquire_nested_drdpa_lock (libiomp5md.dll) (22 samples, 36.07%)</title><rect x="687" y="212" width="425" height="15" fill="rgb(212,48,7)"/><text x="690.00" y="222.50">_kmp_acquire_nested_drdpa_lock (libiomp5md.dll)</text></g><g><title>_kmp_invoke_microtask (libiomp5md.dll) (22 samples, 36.07%)</title><rect x="687" y="228" width="425" height="15" fill="rgb(208,12,52)"/><text x="690.00" y="238.50">_kmp_invoke_microtask (libiomp5md.dll)</text></g><g><title>mkl_blas_ddot (mkl_intel_thread.dll) (22 samples, 36.07%)</title><rect x="687" y="244" width="425" height="15" fill="rgb(251,52,35)"/><text x="690.00" y="254.50">mkl_blas_ddot (mkl_intel_thread.dll)</text></g><g><title>mkl_blas_xddot (mkl_core.dll) (22 samples, 36.07%)</title><rect x="687" y="260" width="425" height="15" fill="rgb(207,82,30)"/><text x="690.00" y="270.50">mkl_blas_xddot (mkl_core.dll)</text></g><g><title>mkl_blas_avx2_xddot (mkl_avx2.dll) (22 samples, 36.07%)</title><rect x="687" y="276" width="425" height="15" fill="rgb(221,217,32)"/><text x="690.00" y="286.50">mkl_blas_avx2_xddot (mkl_avx2.dll)</text></g><g><title>PyInit_dot_blas_lapack (td3a_cpp\tutorial\dot_blas_lapack.cp37-win_amd64.pyd) (3 samples, 4.92%)</title><rect x="1112" y="116" width="58" height="15" fill="rgb(247,114,51)"/><text x="1115.00" y="126.50">PyInit..</text></g><g><title>0x7ff978be7dee (td3a_cpp\tutorial\dot_blas_lapack.cp37-win_amd64.pyd) (1 samples, 1.64%)</title><rect x="1151" y="132" width="19" height="15" fill="rgb(227,39,11)"/><text x="1154.00" y="142.50"></text></g><g><title>all (61 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(247,226,44)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (plot_profile.py) (61 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(245,212,45)"/><text x="13.00" y="62.50">&lt;module&gt; (plot_profile.py)</text></g><g><title>f3_blas (plot_profile.py) (28 samples, 45.90%)</title><rect x="648" y="68" width="542" height="15" fill="rgb(210,65,26)"/><text x="651.00" y="78.50">f3_blas (plot_profile.py)</text></g><g><title>PyInit_dot_blas_lapack (td3a_cpp\tutorial\dot_blas_lapack.cp37-win_amd64.pyd) (27 samples, 44.26%)</title><rect x="667" y="84" width="523" height="15" fill="rgb(222,149,36)"/><text x="670.00" y="94.50">PyInit_dot_blas_lapack (td3a_cpp\tutorial\dot_blas_lapack.cp37-win_amd6..</text></g><g><title>PyInit_dot_blas_lapack (td3a_cpp\tutorial\dot_blas_lapack.cp37-win_amd64.pyd) (27 samples, 44.26%)</title><rect x="667" y="100" width="523" height="15" fill="rgb(249,14,23)"/><text x="670.00" y="110.50">PyInit_dot_blas_lapack (td3a_cpp\tutorial\dot_blas_lapack.cp37-win_amd6..</text></g><g><title>errno (ucrtbase.dll) (1 samples, 1.64%)</title><rect x="1170" y="116" width="20" height="15" fill="rgb(223,12,24)"/><text x="1173.00" y="126.50"></text></g><g><title>__lc_locale_name_func (ucrtbase.dll) (1 samples, 1.64%)</title><rect x="1170" y="132" width="20" height="15" fill="rgb(209,56,49)"/><text x="1173.00" y="142.50"></text></g><g><title>FlsGetValue (KERNELBASE.dll) (1 samples, 1.64%)</title><rect x="1170" y="148" width="20" height="15" fill="rgb(231,84,45)"/><text x="1173.00" y="158.50"></text></g></g></svg>